name: Docker Compose Build + Backend Tests

on:
  pull_request:
    branches: ["main", "develop"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código da branch do PR
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Exporta secrets para o ambiente
      - name: Set environment variables
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> $GITHUB_ENV
          echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> $GITHUB_ENV
          echo "PROFILE=${{ secrets.PROFILE }}" >> $GITHUB_ENV

      # 4. Build e sobe backend + H2
      - name: Build and start backend + H2
        run: |
          docker compose --profile dev -f Docker-compose.yml up -d --build
          docker compose --profile dev ps

      # 5. Espera os serviços estarem prontos
      - name: Wait for backend and H2 to be ready
        run: |
          echo "Waiting for backend on port 8080..."
          for i in {1..30}; do
            if docker compose exec -T backend curl -f http://localhost:8080/actuator/health; then
              echo "Backend is ready!"
              break
            fi
            echo "Waiting 2s..."
            sleep 2
          done

          echo "Waiting for H2 database on port 9092..."
          for i in {1..30}; do
            if nc -z localhost 9092; then
              echo "H2 is ready!"
              break
            fi
            echo "Waiting 2s..."
            sleep 2
          done

      # 6. Executa os testes do backend dentro do container
      - name: Run backend tests
        run: |
          docker compose exec -T backend ./mvnw test

      # 7. Derruba os containers no fim
      - name: Shutdown
        if: always()
        run: docker compose --profile dev -f Docker-compose.yml down
